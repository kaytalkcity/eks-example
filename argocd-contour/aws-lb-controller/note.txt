 Install  AWS Load Balancer Controller
 =====================================
 1.  set the AWS Load Balancer Controller version

echo 'export LBC_VERSION="v2.4.1"' >>  ~/.bash_profile
echo 'export LBC_CHART_VERSION="1.4.1"' >>  ~/.bash_profile
.  ~/.bash_profile



2.  verify if the AWS Load Balancer Controller version has been set

if [ ! -x ${LBC_VERSION} ]
  then
    tput setaf 2; echo '${LBC_VERSION} has been set.'
  else
    tput setaf 1;echo '${LBC_VERSION} has NOT been set.'
fi


3. Create IAM OIDC provider
export AWS_REGION='us-east-2'
export CLUSTER_NAME='eks-shared-2'
export ACCOUNT_ID=$(aws sts get-caller-identity --output text --query Account)

eksctl utils associate-iam-oidc-provider --region ${AWS_REGION} --cluster ${CLUSTER_NAME} --approve

4. Create an IAM policy called
a. Create a policy called AWSLoadBalancerControllerIAMPolicy

curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/${LBC_VERSION}/docs/install/iam_policy.json
aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json
	
	
b. Create a IAM role and ServiceAccount

eksctl create iamserviceaccount \
  --cluster ${CLUSTER_NAME} \
  --namespace kube-system \
  --name aws-load-balancer-controller \
  --attach-policy-arn arn:aws:iam::${ACCOUNT_ID}:policy/AWSLoadBalancerControllerIAMPolicy \
  --override-existing-serviceaccounts \
  --approve
  
 
c. Install the TargetGroupBinding CRDs
1. Dowload the template for CRD
    wget https://github.com/kubernetes-sigs/aws-load-balancer-controller/releases/download/v2.4.3/v2_4_3_full.yaml

2. deploy

 kubectl apply -f  aws-lb-controller-crd.yaml 


or 

kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"

kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller/crds?ref=master"
kubectl get crd



d. Deploy the Helm chart
1. add aws chat to argo repo : https://aws.github.io/eks-charts
helm repo add eks https://aws.github.io/eks-charts

2. Deploy with argocd

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: aws-load-balancer-controller
spec:
  destination:
    name: ''
    namespace: kube-system
    server: 'https://kubernetes.default.svc'
  source:
    path: ''
    repoURL: 'https://aws.github.io/eks-charts'
    targetRevision: 1.4.4
    chart: aws-load-balancer-controller
    helm:
      parameters:
        - name: clusterName
          value: eks-shared-2
        - name: serviceAccount.create
          value: 'false'
        - name: serviceAccount.name
          value: aws-load-balancer-controller
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      
      
or


helm upgrade -i aws-load-balancer-controller \
    eks/aws-load-balancer-controller \
    -n kube-system \
    --set clusterName=eks-shared-2 \
    --set serviceAccount.create=false \
    --set serviceAccount.name=aws-load-balancer-controller \
    --set image.tag="${LBC_VERSION}" \
    --version="${LBC_CHART_VERSION}"


helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=<cluster-name> --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller


kubectl -n kube-system rollout status deployment aws-load-balancer-controller